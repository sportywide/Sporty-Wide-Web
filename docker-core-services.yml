version: '3.5'
services:
    postgres:
        image: sportywide/sportywide-postgres
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        volumes:
            - postgres:/var/lib/postgres/data
        ports:
            - '${POSTGRES_PORT}:5432'
        networks:
            - sportywide-backend
    flyway:
        image: sportywide/sportywide-flyway
        command: -url=jdbc:postgresql://postgres:5432/${POSTGRES_DB} -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} migrate
        volumes:
            - './sql:/flyway/sql'
        environment:
            WAIT_HOSTS: postgres:5432
        depends_on:
            - postgres
        networks:
            - sportywide-backend
    redis:
        image: sportywide/sportywide-redis
        volumes:
            - redis:/data
        ports:
            - '${REDIS_PORT}:6379'
        networks:
            - sportywide-backend
    mailhog:
        image: sportywide/sportywide-mailhog
        ports:
            - '${MAILHOG_TRANSPORT_PORT}:1025'
            - '${MAILHOG_UI_PORT}:8025'
        networks:
            - sportywide-backend
    traefik:
        image: traefik
        command: --web --docker --logLevel=INFO
        ports:
            - 80:80
            - 443:443
            - 8080:8080
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./traefik.toml:/traefik.toml:ro
            - ./certs/sportywide-cert.pem:/certs/sportywide-cert.pem
            - ./certs/sportywide-key.pem:/certs/sportywide-key.pem
        networks:
            - sportywide-frontend
            - sportywide-backend
volumes:
    postgres:
    redis:
networks:
    sportywide-frontend:
        driver: bridge
        name: sportywide-frontend
    sportywide-backend:
        driver: bridge
        name: sportywide-backend
