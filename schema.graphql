# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AddressDto {
  id: Int!
  street1: String
  street2: String
  state: String
  city: String
  country: String
  suburb: String
  postcode: String
  lat: Int
  lon: Int
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Query {
  users(limit: Int, skip: Int, sort: String, asc: Boolean): [UserDto!]!
  user(id: Float!): UserDto!
  teams(limit: Int, skip: Int, sort: String, asc: Boolean, filter: TeamListFilteredDto): TeamPaginationResult!
  team(id: Float!): TeamDto!
}

type TeamDto {
  id: Int!
  name: String!
  image: String!
  title: String!
  leagueId: Int!
  league: String!
  att: Int!
  mid: Int!
  def: Int!
  ovr: Int!
  rating: String!
}

input TeamListFilteredDto {
  leagueId: [Int!]
  search: String
}

type TeamPaginationResult {
  items: [TeamDto!]!
  count: Int!
}

type UserDto {
  id: Int!
  firstName: String!
  lastName: String
  email: String!
  username: String!
  role: UserRole!
  status: UserStatus!
  gender: UserGender
  dob: String
  phone: String
  createdAt: DateTime!
  updatedAt: DateTime!
  profileUrl: String
  profile: UserProfileDto
}

enum UserGender {
  MALE
  FEMALE
  OTHER
}

type UserProfileDto {
  id: Int!
  work: String
  education: String
  summary: String
  address: AddressDto
  addressId: Float
}

enum UserRole {
  ADMIN
  USER
}

enum UserStatus {
  PENDING
  ACTIVE
}
