{
	"Resources": {
		"swAssociateEIPRole9681D3E1": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [
						{
							"Action": "sts:AssumeRole",
							"Effect": "Allow",
							"Principal": {
								"Service": {
									"Fn::Join": [
										"",
										[
											"ec2.",
											{
												"Ref": "AWS::URLSuffix"
											}
										]
									]
								}
							}
						}
					],
					"Version": "2012-10-17"
				},
				"RoleName": "swAssociateEIPRole"
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swAssociateEIPRole/Resource"
			}
		},
		"swAssociateEIPRoleDefaultPolicy8C8A09EE": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyDocument": {
					"Statement": [
						{
							"Action": [
								"ec2:AssociateAddress",
								"ec2:DescribeAddresses",
								"ec2:DescribeTags",
								"ec2:DescribeInstances"
							],
							"Effect": "Allow",
							"Resource": "*"
						}
					],
					"Version": "2012-10-17"
				},
				"PolicyName": "swAssociateEIPRoleDefaultPolicy8C8A09EE",
				"Roles": [
					{
						"Ref": "swAssociateEIPRole9681D3E1"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swAssociateEIPRole/DefaultPolicy/Resource"
			}
		},
		"swScyllaEIP": {
			"Type": "AWS::EC2::EIP",
			"Metadata": {
				"aws:cdk:path": "swStack/swScyllaEIP"
			}
		},
		"swVpcCCE5EF6C": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": "10.0.0.0/16",
				"EnableDnsHostnames": true,
				"EnableDnsSupport": true,
				"InstanceTenancy": "default",
				"Tags": [
					{
						"Key": "Name",
						"Value": "swStack/swVpc"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/Resource"
			}
		},
		"swVpcPublicSubnet1Subnet158A1872": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"CidrBlock": "10.0.0.0/18",
				"VpcId": {
					"Ref": "swVpcCCE5EF6C"
				},
				"AvailabilityZone": {
					"Fn::Select": [
						0,
						{
							"Fn::GetAZs": ""
						}
					]
				},
				"MapPublicIpOnLaunch": true,
				"Tags": [
					{
						"Key": "Name",
						"Value": "swStack/swVpc/PublicSubnet1"
					},
					{
						"Key": "aws-cdk:subnet-name",
						"Value": "Public"
					},
					{
						"Key": "aws-cdk:subnet-type",
						"Value": "Public"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PublicSubnet1/Subnet"
			}
		},
		"swVpcPublicSubnet1RouteTableD65E32BD": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "swVpcCCE5EF6C"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "swStack/swVpc/PublicSubnet1"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PublicSubnet1/RouteTable"
			}
		},
		"swVpcPublicSubnet1RouteTableAssociation048C8806": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "swVpcPublicSubnet1RouteTableD65E32BD"
				},
				"SubnetId": {
					"Ref": "swVpcPublicSubnet1Subnet158A1872"
				}
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PublicSubnet1/RouteTableAssociation"
			}
		},
		"swVpcPublicSubnet1DefaultRoute8F501DF4": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "swVpcPublicSubnet1RouteTableD65E32BD"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "swVpcIGW0753E321"
				}
			},
			"DependsOn": ["swVpcVPCGWA748E2CC"],
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PublicSubnet1/DefaultRoute"
			}
		},
		"swVpcPublicSubnet2Subnet08229DC1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"CidrBlock": "10.0.64.0/18",
				"VpcId": {
					"Ref": "swVpcCCE5EF6C"
				},
				"AvailabilityZone": {
					"Fn::Select": [
						1,
						{
							"Fn::GetAZs": ""
						}
					]
				},
				"MapPublicIpOnLaunch": true,
				"Tags": [
					{
						"Key": "Name",
						"Value": "swStack/swVpc/PublicSubnet2"
					},
					{
						"Key": "aws-cdk:subnet-name",
						"Value": "Public"
					},
					{
						"Key": "aws-cdk:subnet-type",
						"Value": "Public"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PublicSubnet2/Subnet"
			}
		},
		"swVpcPublicSubnet2RouteTable500C9C38": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "swVpcCCE5EF6C"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "swStack/swVpc/PublicSubnet2"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PublicSubnet2/RouteTable"
			}
		},
		"swVpcPublicSubnet2RouteTableAssociationD6D0FF65": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "swVpcPublicSubnet2RouteTable500C9C38"
				},
				"SubnetId": {
					"Ref": "swVpcPublicSubnet2Subnet08229DC1"
				}
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PublicSubnet2/RouteTableAssociation"
			}
		},
		"swVpcPublicSubnet2DefaultRoute3E1F4372": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "swVpcPublicSubnet2RouteTable500C9C38"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "swVpcIGW0753E321"
				}
			},
			"DependsOn": ["swVpcVPCGWA748E2CC"],
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PublicSubnet2/DefaultRoute"
			}
		},
		"swVpcPrivateSubnet1Subnet0E22C6D3": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"CidrBlock": "10.0.128.0/18",
				"VpcId": {
					"Ref": "swVpcCCE5EF6C"
				},
				"AvailabilityZone": {
					"Fn::Select": [
						0,
						{
							"Fn::GetAZs": ""
						}
					]
				},
				"MapPublicIpOnLaunch": false,
				"Tags": [
					{
						"Key": "Name",
						"Value": "swStack/swVpc/PrivateSubnet1"
					},
					{
						"Key": "aws-cdk:subnet-name",
						"Value": "Private"
					},
					{
						"Key": "aws-cdk:subnet-type",
						"Value": "Private"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PrivateSubnet1/Subnet"
			}
		},
		"swVpcPrivateSubnet1RouteTable5277D0B1": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "swVpcCCE5EF6C"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "swStack/swVpc/PrivateSubnet1"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PrivateSubnet1/RouteTable"
			}
		},
		"swVpcPrivateSubnet1RouteTableAssociation018191BB": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "swVpcPrivateSubnet1RouteTable5277D0B1"
				},
				"SubnetId": {
					"Ref": "swVpcPrivateSubnet1Subnet0E22C6D3"
				}
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PrivateSubnet1/RouteTableAssociation"
			}
		},
		"swVpcPrivateSubnet1DefaultRoute2BADE774": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "swVpcPrivateSubnet1RouteTable5277D0B1"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"InstanceId": {
					"Ref": "swNATInstance"
				}
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PrivateSubnet1/DefaultRoute"
			}
		},
		"swVpcPrivateSubnet2SubnetE95D8D8E": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"CidrBlock": "10.0.192.0/18",
				"VpcId": {
					"Ref": "swVpcCCE5EF6C"
				},
				"AvailabilityZone": {
					"Fn::Select": [
						1,
						{
							"Fn::GetAZs": ""
						}
					]
				},
				"MapPublicIpOnLaunch": false,
				"Tags": [
					{
						"Key": "Name",
						"Value": "swStack/swVpc/PrivateSubnet2"
					},
					{
						"Key": "aws-cdk:subnet-name",
						"Value": "Private"
					},
					{
						"Key": "aws-cdk:subnet-type",
						"Value": "Private"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PrivateSubnet2/Subnet"
			}
		},
		"swVpcPrivateSubnet2RouteTableEEA840BF": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "swVpcCCE5EF6C"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "swStack/swVpc/PrivateSubnet2"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PrivateSubnet2/RouteTable"
			}
		},
		"swVpcPrivateSubnet2RouteTableAssociation7C48B3B1": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "swVpcPrivateSubnet2RouteTableEEA840BF"
				},
				"SubnetId": {
					"Ref": "swVpcPrivateSubnet2SubnetE95D8D8E"
				}
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PrivateSubnet2/RouteTableAssociation"
			}
		},
		"swVpcPrivateSubnet2DefaultRoute725B893A": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "swVpcPrivateSubnet2RouteTableEEA840BF"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"InstanceId": {
					"Ref": "swNATInstance"
				}
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/PrivateSubnet2/DefaultRoute"
			}
		},
		"swVpcIGW0753E321": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [
					{
						"Key": "Name",
						"Value": "swStack/swVpc"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/IGW"
			}
		},
		"swVpcVPCGWA748E2CC": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "swVpcCCE5EF6C"
				},
				"InternetGatewayId": {
					"Ref": "swVpcIGW0753E321"
				}
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swVpc/VPCGW"
			}
		},
		"swNatSecurityGroup1C5D8757": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "NAT Instance Security Group",
				"GroupName": "swNatSecurityGroup",
				"SecurityGroupEgress": [
					{
						"CidrIp": "0.0.0.0/0",
						"Description": "Allow all outbound traffic by default",
						"IpProtocol": "-1"
					}
				],
				"SecurityGroupIngress": [
					{
						"CidrIp": "0.0.0.0/0",
						"Description": "from 0.0.0.0/0:ALL PORTS",
						"FromPort": 0,
						"IpProtocol": "tcp",
						"ToPort": 65535
					}
				],
				"VpcId": {
					"Ref": "swVpcCCE5EF6C"
				}
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swNatSecurityGroup/Resource"
			}
		},
		"swNATInstance": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"IamInstanceProfile": {
					"Ref": "swNatInstanceProfileRole"
				},
				"ImageId": "ami-00c1445796bc0a29f",
				"InstanceType": "t2.nano",
				"KeyName": "sw-ec2-key",
				"SecurityGroupIds": [
					{
						"Fn::GetAtt": ["swNatSecurityGroup1C5D8757", "GroupId"]
					}
				],
				"SourceDestCheck": false,
				"SubnetId": {
					"Ref": "swVpcPublicSubnet1Subnet158A1872"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": "swStack/swNatInstance"
					}
				],
				"UserData": {
					"Fn::Base64": "#!/bin/bash\nset -x\nexec > >(tee /var/log/user-data.log|logger -t user-data ) 2>&1\nyum update -y\nyum install -y postgresql\nyum install -y gcc\nwget http://download.redis.io/redis-stable.tar.gz && tar xvzf redis-stable.tar.gz && cd redis-stable && make\ncp src/redis-cli /usr/bin/\nyum install -y jq"
				}
			},
			"DependsOn": ["swNatInstanceProfileRole"],
			"Metadata": {
				"aws:cdk:path": "swStack/swNATInstance"
			}
		},
		"swNatInstanceProfileRole": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Roles": [
					{
						"Ref": "swAssociateEIPRole9681D3E1"
					}
				],
				"InstanceProfileName": "swNatInstanceProfileRole"
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swNatInstanceProfileRole"
			}
		},
		"swRdsSubnetGroupFE6F7CD2": {
			"Type": "AWS::RDS::DBSubnetGroup",
			"Properties": {
				"DBSubnetGroupDescription": "Subnet group for swRds database",
				"SubnetIds": [
					{
						"Ref": "swVpcPrivateSubnet1Subnet0E22C6D3"
					},
					{
						"Ref": "swVpcPrivateSubnet2SubnetE95D8D8E"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swRds/SubnetGroup"
			}
		},
		"swRdsSecurityGroup12C40243": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Security group for swRds database",
				"SecurityGroupEgress": [
					{
						"CidrIp": "0.0.0.0/0",
						"Description": "Allow all outbound traffic by default",
						"IpProtocol": "-1"
					}
				],
				"VpcId": {
					"Ref": "swVpcCCE5EF6C"
				}
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swRds/SecurityGroup/Resource"
			}
		},
		"swRds4D52937A": {
			"Type": "AWS::RDS::DBInstance",
			"Properties": {
				"DBInstanceClass": "db.t2.micro",
				"AllocatedStorage": "100",
				"CopyTagsToSnapshot": true,
				"DBInstanceIdentifier": "swRds",
				"DBName": "sportywide",
				"DBSubnetGroupName": {
					"Ref": "swRdsSubnetGroupFE6F7CD2"
				},
				"DeleteAutomatedBackups": true,
				"DeletionProtection": false,
				"Engine": "postgres",
				"EngineVersion": "10.10",
				"MasterUsername": "sportywide",
				"MasterUserPassword": "68VTyDC^pXPR#",
				"PubliclyAccessible": false,
				"StorageType": "gp2",
				"VPCSecurityGroups": [
					{
						"Fn::GetAtt": ["swRdsSecurityGroup12C40243", "GroupId"]
					}
				]
			},
			"UpdateReplacePolicy": "Retain",
			"DeletionPolicy": "Retain",
			"Metadata": {
				"aws:cdk:path": "swStack/swRds/Resource"
			}
		},
		"rdsSecurityGroupfromswStackswNatSecurityGroup11DFD82954324DF88762": {
			"Type": "AWS::EC2::SecurityGroupIngress",
			"Properties": {
				"IpProtocol": "tcp",
				"Description": "from swStackswNatSecurityGroup11DFD829:5432",
				"FromPort": 5432,
				"GroupId": {
					"Fn::GetAtt": ["swRdsSecurityGroup12C40243", "GroupId"]
				},
				"SourceSecurityGroupId": {
					"Fn::GetAtt": ["swNatSecurityGroup1C5D8757", "GroupId"]
				},
				"ToPort": 5432
			},
			"Metadata": {
				"aws:cdk:path": "swStack/rdsSecurityGroup/from swStackswNatSecurityGroup11DFD829:5432"
			}
		},
		"swCacheSubnet": {
			"Type": "AWS::ElastiCache::SubnetGroup",
			"Properties": {
				"Description": "ElasticCache subnet group",
				"SubnetIds": [
					{
						"Ref": "swVpcPrivateSubnet1Subnet0E22C6D3"
					},
					{
						"Ref": "swVpcPrivateSubnet2SubnetE95D8D8E"
					}
				],
				"CacheSubnetGroupName": "swCacheSubnet"
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swCacheSubnet"
			}
		},
		"swRedisSecurityGroup264EB701": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "swStack/swRedisSecurityGroup",
				"GroupName": "swRedisSecurityGroup",
				"SecurityGroupEgress": [
					{
						"CidrIp": "0.0.0.0/0",
						"Description": "Allow all outbound traffic by default",
						"IpProtocol": "-1"
					}
				],
				"VpcId": {
					"Ref": "swVpcCCE5EF6C"
				}
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swRedisSecurityGroup/Resource"
			}
		},
		"swRedisSecurityGroupfromswStackswNatSecurityGroup11DFD8296379CB219449": {
			"Type": "AWS::EC2::SecurityGroupIngress",
			"Properties": {
				"IpProtocol": "tcp",
				"Description": "from swStackswNatSecurityGroup11DFD829:6379",
				"FromPort": 6379,
				"GroupId": {
					"Fn::GetAtt": ["swRedisSecurityGroup264EB701", "GroupId"]
				},
				"SourceSecurityGroupId": {
					"Fn::GetAtt": ["swNatSecurityGroup1C5D8757", "GroupId"]
				},
				"ToPort": 6379
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swRedisSecurityGroup/from swStackswNatSecurityGroup11DFD829:6379"
			}
		},
		"swCluster": {
			"Type": "AWS::ElastiCache::CacheCluster",
			"Properties": {
				"CacheNodeType": "cache.t2.micro",
				"Engine": "redis",
				"NumCacheNodes": 1,
				"AutoMinorVersionUpgrade": true,
				"CacheSubnetGroupName": "swCacheSubnet",
				"ClusterName": "swCluster",
				"VpcSecurityGroupIds": [
					{
						"Fn::GetAtt": ["swRedisSecurityGroup264EB701", "GroupId"]
					}
				]
			},
			"DependsOn": ["swCacheSubnet"],
			"Metadata": {
				"aws:cdk:path": "swStack/swCluster"
			}
		},
		"swEcsCluster976CF4F2": {
			"Type": "AWS::ECS::Cluster",
			"Properties": {
				"ClusterName": "swEcsCluster"
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swEcsCluster/Resource"
			}
		},
		"swEcsAutoScalingGroupInstanceSecurityGroup6821B608": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "swStack/swEcsAutoScalingGroup/InstanceSecurityGroup",
				"SecurityGroupEgress": [
					{
						"CidrIp": "0.0.0.0/0",
						"Description": "Allow all outbound traffic by default",
						"IpProtocol": "-1"
					}
				],
				"Tags": [
					{
						"Key": "Name",
						"Value": "swStack/swEcsAutoScalingGroup"
					}
				],
				"VpcId": {
					"Ref": "swVpcCCE5EF6C"
				}
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swEcsAutoScalingGroup/InstanceSecurityGroup/Resource"
			}
		},
		"swEcsAutoScalingGroupInstanceRole33299F62": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [
						{
							"Action": "sts:AssumeRole",
							"Effect": "Allow",
							"Principal": {
								"Service": {
									"Fn::Join": [
										"",
										[
											"ec2.",
											{
												"Ref": "AWS::URLSuffix"
											}
										]
									]
								}
							}
						}
					],
					"Version": "2012-10-17"
				},
				"ManagedPolicyArns": [
					{
						"Fn::Join": [
							"",
							[
								"arn:",
								{
									"Ref": "AWS::Partition"
								},
								":iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
							]
						]
					}
				],
				"Tags": [
					{
						"Key": "Name",
						"Value": "swStack/swEcsAutoScalingGroup"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swEcsAutoScalingGroup/InstanceRole/Resource"
			}
		},
		"swEcsAutoScalingGroupInstanceRoleDefaultPolicyC828C99C": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyDocument": {
					"Statement": [
						{
							"Action": [
								"ec2:AssociateAddress",
								"ec2:DescribeAddresses",
								"ec2:DescribeTags",
								"ec2:DescribeInstances"
							],
							"Effect": "Allow",
							"Resource": "*"
						},
						{
							"Action": [
								"ecs:CreateCluster",
								"ecs:DeregisterContainerInstance",
								"ecs:DiscoverPollEndpoint",
								"ecs:Poll",
								"ecs:RegisterContainerInstance",
								"ecs:StartTelemetrySession",
								"ecs:Submit*",
								"ecr:GetAuthorizationToken",
								"logs:CreateLogStream",
								"logs:PutLogEvents"
							],
							"Effect": "Allow",
							"Resource": "*"
						}
					],
					"Version": "2012-10-17"
				},
				"PolicyName": "swEcsAutoScalingGroupInstanceRoleDefaultPolicyC828C99C",
				"Roles": [
					{
						"Ref": "swEcsAutoScalingGroupInstanceRole33299F62"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swEcsAutoScalingGroup/InstanceRole/DefaultPolicy/Resource"
			}
		},
		"swEcsAutoScalingGroupInstanceProfileE8E1B22D": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Roles": [
					{
						"Ref": "swEcsAutoScalingGroupInstanceRole33299F62"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swEcsAutoScalingGroup/InstanceProfile"
			}
		},
		"swEcsAutoScalingGroupLaunchConfigDDCBD98B": {
			"Type": "AWS::AutoScaling::LaunchConfiguration",
			"Properties": {
				"ImageId": {
					"Ref": "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
				},
				"InstanceType": "t2.micro",
				"IamInstanceProfile": {
					"Ref": "swEcsAutoScalingGroupInstanceProfileE8E1B22D"
				},
				"SecurityGroups": [
					{
						"Fn::GetAtt": ["swEcsAutoScalingGroupInstanceSecurityGroup6821B608", "GroupId"]
					},
					{
						"Fn::GetAtt": ["swEcsAutoScalingSecurityGroupE4482745", "GroupId"]
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"#!/bin/bash\necho ECS_CLUSTER=",
								{
									"Ref": "swEcsCluster976CF4F2"
								},
								" >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config\n"
							]
						]
					}
				}
			},
			"DependsOn": [
				"swEcsAutoScalingGroupInstanceRoleDefaultPolicyC828C99C",
				"swEcsAutoScalingGroupInstanceRole33299F62"
			],
			"Metadata": {
				"aws:cdk:path": "swStack/swEcsAutoScalingGroup/LaunchConfig"
			}
		},
		"swEcsAutoScalingGroupASGF807DD6B": {
			"Type": "AWS::AutoScaling::AutoScalingGroup",
			"Properties": {
				"MaxSize": "1",
				"MinSize": "1",
				"DesiredCapacity": "1",
				"LaunchConfigurationName": {
					"Ref": "swEcsAutoScalingGroupLaunchConfigDDCBD98B"
				},
				"Tags": [
					{
						"Key": "Name",
						"PropagateAtLaunch": true,
						"Value": "swStack/swEcsAutoScalingGroup"
					}
				],
				"VPCZoneIdentifier": [
					{
						"Ref": "swVpcPublicSubnet1Subnet158A1872"
					},
					{
						"Ref": "swVpcPublicSubnet2Subnet08229DC1"
					}
				]
			},
			"UpdatePolicy": {
				"AutoScalingScheduledAction": {
					"IgnoreUnmodifiedGroupSizeProperties": true
				}
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swEcsAutoScalingGroup/ASG"
			}
		},
		"swEcsAutoScalingSecurityGroupE4482745": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "swStack/swEcsAutoScalingSecurityGroup",
				"GroupName": "swEcsAutoScalingSecurityGroup",
				"SecurityGroupEgress": [
					{
						"CidrIp": "0.0.0.0/0",
						"Description": "Allow all outbound traffic by default",
						"IpProtocol": "-1"
					}
				],
				"SecurityGroupIngress": [
					{
						"CidrIp": "0.0.0.0/0",
						"Description": "from 0.0.0.0/0:8081",
						"FromPort": 8081,
						"IpProtocol": "tcp",
						"ToPort": 8081
					},
					{
						"CidrIp": "0.0.0.0/0",
						"Description": "from 0.0.0.0/0:8899",
						"FromPort": 8899,
						"IpProtocol": "tcp",
						"ToPort": 8899
					}
				],
				"VpcId": {
					"Ref": "swVpcCCE5EF6C"
				}
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swEcsAutoScalingSecurityGroup/Resource"
			}
		},
		"swEcsScyllaTaskTaskRole61F900E7": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [
						{
							"Action": "sts:AssumeRole",
							"Effect": "Allow",
							"Principal": {
								"Service": "ecs-tasks.amazonaws.com"
							}
						}
					],
					"Version": "2012-10-17"
				}
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swEcsScyllaTask/TaskRole/Resource"
			}
		},
		"swEcsScyllaTaskE1BA0445": {
			"Type": "AWS::ECS::TaskDefinition",
			"Properties": {
				"ContainerDefinitions": [
					{
						"Essential": true,
						"Image": "wildcat/scylla",
						"Memory": 512,
						"MountPoints": [
							{
								"ContainerPath": "/var/www/scylla",
								"ReadOnly": false,
								"SourceVolume": "scylla"
							}
						],
						"Name": "scyllaContainer",
						"PortMappings": [
							{
								"ContainerPort": 8081,
								"HostPort": 8081,
								"Protocol": "tcp"
							},
							{
								"ContainerPort": 8899,
								"HostPort": 8899,
								"Protocol": "tcp"
							}
						]
					}
				],
				"Cpu": "256",
				"Family": "swStackswEcsScyllaTask86A96E2E",
				"Memory": "512",
				"NetworkMode": "bridge",
				"RequiresCompatibilities": ["EC2"],
				"TaskRoleArn": {
					"Fn::GetAtt": ["swEcsScyllaTaskTaskRole61F900E7", "Arn"]
				},
				"Volumes": [
					{
						"Name": "scylla"
					}
				]
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swEcsScyllaTask/Resource"
			}
		},
		"swScyllaServiceD7E5BF5A": {
			"Type": "AWS::ECS::Service",
			"Properties": {
				"TaskDefinition": {
					"Ref": "swEcsScyllaTaskE1BA0445"
				},
				"Cluster": {
					"Ref": "swEcsCluster976CF4F2"
				},
				"DeploymentConfiguration": {
					"MaximumPercent": 200,
					"MinimumHealthyPercent": 50
				},
				"DesiredCount": 1,
				"EnableECSManagedTags": false,
				"LaunchType": "EC2",
				"SchedulingStrategy": "REPLICA",
				"ServiceName": "swScyllaService"
			},
			"Metadata": {
				"aws:cdk:path": "swStack/swScyllaService/Service"
			}
		}
	},
	"Parameters": {
		"SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": {
			"Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
			"Default": "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id"
		}
	}
}
